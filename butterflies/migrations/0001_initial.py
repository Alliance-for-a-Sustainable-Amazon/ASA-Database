# Generated by Django 5.2.4 on 2025-08-20 20:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Initials',
            fields=[
                ('initials', models.CharField(help_text='Initials (primary key)', max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default=None, help_text='Full name', max_length=255, null=True)),
                ('relationshipOrTitle', models.CharField(blank=True, default=None, help_text='Relationship or title', max_length=255, null=True)),
                ('yearAndTerm', models.CharField(blank=True, default=None, help_text='Year and term', max_length=50, null=True)),
            ],
            options={
                'db_table': 'initialsTable',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('localityCode', models.CharField(help_text='Unique code for locality (primary key)', max_length=100, primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('region', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('province', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('district', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('siteName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('siteDescription', models.TextField(blank=True, default=None, null=True)),
                ('habitat', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Localities',
                'db_table': 'localityTable',
            },
        ),
        migrations.CreateModel(
            name='Specimen',
            fields=[
                ('modified', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('decimalLatitude', models.CharField(blank=True, help_text='Text/number (XX.XXXXXX).', max_length=20, null=True)),
                ('decimalLongitude', models.CharField(blank=True, help_text='Text/number (XX.XXXXXX).', max_length=20, null=True)),
                ('exact_loc', models.CharField(blank=True, choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], help_text='Dropdown: "TRUE", "FALSE".', max_length=5, null=True)),
                ('coordinateUncertaintyInMeters', models.CharField(blank=True, help_text='Text.', max_length=100, null=True)),
                ('georeferencedDate', models.CharField(blank=True, help_text='Date (DD-MMM-YYYY; ex., 27-Nov-2024).', max_length=100, null=True)),
                ('georeferenceProtocol', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('minimumElevationInMeters', models.CharField(blank=True, help_text='Text/number (X,XXX).', max_length=20, null=True)),
                ('maximumElevationInMeters', models.CharField(blank=True, help_text='Text/number (X,XXX).', max_length=20, null=True)),
                ('specimenNumber', models.CharField(blank=True, default=None, help_text='Manual entry. If duplicate, error.', max_length=100, null=True, unique=True)),
                ('catalogNumber', models.CharField(help_text='Auto-generated: year-localityCode-specimenNumber (nnnn). Primary key for specimen.', max_length=100, primary_key=True, serialize=False)),
                ('sex', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('.', '.')], help_text='Dropdown: male/female/.', max_length=6)),
                ('behavior', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('occurrenceRemarks', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('disposition', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('year', models.CharField(blank=True, help_text='Dropdown/typeable: 1900-2050.', max_length=4, null=True)),
                ('month', models.CharField(blank=True, help_text='Dropdown/typeable.', max_length=10, null=True)),
                ('day', models.CharField(blank=True, help_text='Dropdown/typeable.', max_length=2, null=True)),
                ('eventTime', models.CharField(blank=True, help_text='Time (XX:XX) military format.', max_length=50, null=True)),
                ('eventDate', models.CharField(blank=True, help_text='Date (DD-MMM-YYYY; ex., 27-Nov-2024).', max_length=100, null=True)),
                ('habitatNotes', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('samplingProtocol', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('family', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('subfamily', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('tribe', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('subtribe', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('genus', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('specificEpithet', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('infraspecificEpithet', models.CharField(blank=True, help_text='Text/write in.', max_length=100, null=True)),
                ('dateIdentified', models.CharField(blank=True, help_text='Date (DD-MMM-YYYY; ex., 27-Nov-2024).', max_length=100, null=True)),
                ('identificationReferences', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('identificationRemarks', models.TextField(blank=True, help_text="Append-only: Each entry is 'MM-DD-YYYY, initials, description'; entries separated by semicolon. Use form to add, not edit.", null=True)),
                ('georeferencedBy', models.ForeignKey(help_text='Dropdown: initials from Initials table.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='georeferenced_specimens', to='butterflies.initials')),
                ('identifiedBy', models.ForeignKey(help_text='Dropdown: initials from Initials table.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='identified_specimens', to='butterflies.initials')),
                ('locality', models.ForeignKey(help_text='Dropdown: localityCode from Locality table.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='butterflies.locality')),
                ('recordedBy', models.ForeignKey(help_text='Dropdown: initials from Initials table.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='butterflies.initials')),
            ],
            options={
                'db_table': 'specimenTable',
                'ordering': ['modified', 'locality', 'decimalLatitude', 'decimalLongitude', 'exact_loc', 'coordinateUncertaintyInMeters', 'georeferencedBy', 'georeferencedDate', 'georeferenceProtocol', 'minimumElevationInMeters', 'maximumElevationInMeters', 'specimenNumber', 'catalogNumber', 'recordedBy', 'sex', 'behavior', 'occurrenceRemarks', 'disposition', 'year', 'month', 'day', 'eventTime', 'eventDate', 'habitatNotes', 'samplingProtocol', 'family', 'subfamily', 'tribe', 'subtribe', 'genus', 'specificEpithet', 'infraspecificEpithet', 'identifiedBy', 'dateIdentified', 'identificationReferences', 'identificationRemarks'],
            },
        ),
    ]
